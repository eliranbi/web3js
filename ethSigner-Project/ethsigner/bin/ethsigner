#!/bin/sh

#
# Copyright © 2015-2021 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
#
#   ethsigner start up script for POSIX generated by Gradle.
#
#   Important for running:
#
#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
#       noncompliant, but you have some other compliant shell such as ksh or
#       bash, then to run this script, type that shell name before the whole
#       command line, like:
#
#           ksh ethsigner
#
#       Busybox and similar reduced shells will NOT work, because this script
#       requires all of these POSIX shell features:
#         * functions;
#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
#         * compound commands having a testable exit status, especially «case»;
#         * various built-in commands including «command», «set», and «ulimit».
#
#   Important for patching:
#
#   (2) This script targets any POSIX shell, so it avoids extensions provided
#       by Bash, Ksh, etc; in particular arrays are avoided.
#
#       The "traditional" practice of packing multiple parameters into a
#       space-separated string is a well documented source of bugs and security
#       problems, so this is (mostly) avoided, by progressively accumulating
#       options in "$@", and eventually passing that to Java.
#
#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
#       and ETHSIGNER_OPTS) rely on word-splitting, this is performed explicitly;
#       see the in-line comments for details.
#
#       There are tweaks for specific operating systems such as AIX, CygWin,
#       Darwin, MinGW, and NonStop.
#
#   (3) This script is generated from the Groovy template
#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
#       within the Gradle project.
#
#       You can find Gradle at https://github.com/gradle/gradle/.
#
##############################################################################

# Attempt to set APP_HOME

# Resolve links: $0 may be a link
app_path=$0

# Need this for daisy-chained symlinks.
while
    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
    [ -h "$app_path" ]
do
    ls=$( ls -ld "$app_path" )
    link=${ls#*' -> '}
    case $link in             #(
      /*)   app_path=$link ;; #(
      *)    app_path=$APP_HOME$link ;;
    esac
done

# This is normally unused
# shellcheck disable=SC2034
APP_BASE_NAME=${0##*/}
APP_HOME=$( cd "${APP_HOME:-./}.." && pwd -P ) || exit

# Add default JVM options here. You can also use JAVA_OPTS and ETHSIGNER_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS='"-Dvertx.disableFileCPResolving=true" "-Dlog4j.shutdownHookEnabled=false" "-Dlog4j2.formatMsgNoLookups=true" "-Dio.netty.tryReflectionSetAccessible=true" "--add-exports" "java.base/jdk.internal.misc=ALL-UNNAMED" "--add-opens" "java.base/java.nio=ALL-UNNAMED"'

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD=maximum

warn () {
    echo "$*"
} >&2

die () {
    echo
    echo "$*"
    echo
    exit 1
} >&2

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "$( uname )" in                #(
  CYGWIN* )         cygwin=true  ;; #(
  Darwin* )         darwin=true  ;; #(
  MSYS* | MINGW* )  msys=true    ;; #(
  NONSTOP* )        nonstop=true ;;
esac

CLASSPATH=$APP_HOME/lib/ethsigner-23.2.0.jar:$APP_HOME/lib/ethsigner-23.2.0.jar:$APP_HOME/lib/ethsigner-subcommands-23.2.0.jar:$APP_HOME/lib/ethsigner-commandline-23.2.0.jar:$APP_HOME/lib/ethsigner-core-23.2.0.jar:$APP_HOME/lib/signing-secp256k1-impl-2.2.6.jar:$APP_HOME/lib/signing-secp256k1-api-2.2.6.jar:$APP_HOME/lib/metrics-core-22.10.3.jar:$APP_HOME/lib/keystorage-hashicorp-2.2.6.jar:$APP_HOME/lib/tuweni-net-2.3.1.jar:$APP_HOME/lib/tuweni-crypto-2.3.1.jar:$APP_HOME/lib/tuweni-io-2.3.1.jar:$APP_HOME/lib/grpc-netty-1.45.1.jar:$APP_HOME/lib/grpc-core-1.45.1.jar:$APP_HOME/lib/grpc-api-1.45.1.jar:$APP_HOME/lib/guava-31.1-jre.jar:$APP_HOME/lib/keystorage-azure-2.2.6.jar:$APP_HOME/lib/log4j-slf4j-impl-2.19.0.jar:$APP_HOME/lib/log4j-core-2.19.0.jar:$APP_HOME/lib/log4j-api-2.19.0.jar:$APP_HOME/lib/besu-4.9.4.jar:$APP_HOME/lib/eea-4.9.4.jar:$APP_HOME/lib/core-4.9.4.jar:$APP_HOME/lib/crypto-4.9.4.jar:$APP_HOME/lib/vertx-web-4.3.8.jar:$APP_HOME/lib/vertx-web-client-4.3.8.jar:$APP_HOME/lib/vertx-web-common-4.3.8.jar:$APP_HOME/lib/vertx-auth-common-4.3.8.jar:$APP_HOME/lib/vertx-bridge-common-4.3.8.jar:$APP_HOME/lib/vertx-uri-template-4.3.8.jar:$APP_HOME/lib/vertx-core-4.3.8.jar:$APP_HOME/lib/plugin-api-22.10.3.jar:$APP_HOME/lib/bcpkix-jdk15on-1.70.jar:$APP_HOME/lib/picocli-4.6.3.jar:$APP_HOME/lib/tuweni-toml-2.3.1.jar:$APP_HOME/lib/failureaccess-1.0.1.jar:$APP_HOME/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:$APP_HOME/lib/tuweni-units-2.3.1.jar:$APP_HOME/lib/tuweni-bytes-2.3.1.jar:$APP_HOME/lib/jsr305-3.0.2.jar:$APP_HOME/lib/checker-qual-3.12.0.jar:$APP_HOME/lib/error_prone_annotations-2.15.0.jar:$APP_HOME/lib/j2objc-annotations-1.3.jar:$APP_HOME/lib/Java-WebSocket-1.5.2.jar:$APP_HOME/lib/azure-security-keyvault-keys-4.5.2.jar:$APP_HOME/lib/azure-security-keyvault-secrets-4.5.2.jar:$APP_HOME/lib/azure-identity-1.7.2.jar:$APP_HOME/lib/azure-core-http-netty-1.12.7.jar:$APP_HOME/lib/azure-core-1.34.0.jar:$APP_HOME/lib/msal4j-persistence-extension-1.1.0.jar:$APP_HOME/lib/msal4j-1.13.3.jar:$APP_HOME/lib/slf4j-api-1.7.36.jar:$APP_HOME/lib/logging-interceptor-4.9.0.jar:$APP_HOME/lib/opentelemetry-exporter-otlp-1.19.0.jar:$APP_HOME/lib/opentelemetry-exporter-otlp-common-1.19.0.jar:$APP_HOME/lib/okhttp-4.10.0.jar:$APP_HOME/lib/abi-4.9.4.jar:$APP_HOME/lib/rlp-4.9.4.jar:$APP_HOME/lib/utils-4.9.4.jar:$APP_HOME/lib/jackson-dataformat-xml-2.14.2.jar:$APP_HOME/lib/jackson-datatype-jsr310-2.14.2.jar:$APP_HOME/lib/jackson-core-2.14.2.jar:$APP_HOME/lib/jackson-annotations-2.14.2.jar:$APP_HOME/lib/jackson-databind-2.14.2.jar:$APP_HOME/lib/netty-all-4.1.86.Final.jar:$APP_HOME/lib/reactor-netty-http-1.0.26.jar:$APP_HOME/lib/reactor-netty-core-1.0.26.jar:$APP_HOME/lib/netty-handler-proxy-4.1.86.Final.jar:$APP_HOME/lib/netty-codec-http2-4.1.86.Final.jar:$APP_HOME/lib/netty-codec-http-4.1.87.Final.jar:$APP_HOME/lib/netty-resolver-dns-native-macos-4.1.86.Final-osx-x86_64.jar:$APP_HOME/lib/netty-resolver-dns-native-macos-4.1.86.Final-osx-aarch_64.jar:$APP_HOME/lib/netty-resolver-dns-classes-macos-4.1.86.Final.jar:$APP_HOME/lib/netty-resolver-dns-4.1.86.Final.jar:$APP_HOME/lib/netty-handler-4.1.87.Final.jar:$APP_HOME/lib/netty-transport-native-epoll-4.1.86.Final.jar:$APP_HOME/lib/netty-transport-native-epoll-4.1.86.Final-linux-x86_64.jar:$APP_HOME/lib/netty-transport-native-epoll-4.1.86.Final-linux-aarch_64.jar:$APP_HOME/lib/netty-transport-native-kqueue-4.1.86.Final-osx-x86_64.jar:$APP_HOME/lib/netty-transport-native-kqueue-4.1.86.Final-osx-aarch_64.jar:$APP_HOME/lib/netty-transport-classes-epoll-4.1.86.Final.jar:$APP_HOME/lib/netty-transport-classes-kqueue-4.1.86.Final.jar:$APP_HOME/lib/netty-transport-native-unix-common-4.1.87.Final.jar:$APP_HOME/lib/netty-codec-socks-4.1.86.Final.jar:$APP_HOME/lib/netty-codec-dns-4.1.86.Final.jar:$APP_HOME/lib/netty-codec-4.1.87.Final.jar:$APP_HOME/lib/netty-transport-4.1.87.Final.jar:$APP_HOME/lib/netty-buffer-4.1.87.Final.jar:$APP_HOME/lib/netty-resolver-4.1.87.Final.jar:$APP_HOME/lib/netty-common-4.1.87.Final.jar:$APP_HOME/lib/commons-net-3.9.0.jar:$APP_HOME/lib/okio-jvm-3.0.0.jar:$APP_HOME/lib/kotlin-stdlib-jdk8-1.6.10.jar:$APP_HOME/lib/netty-tcnative-boringssl-static-2.0.54.Final.jar:$APP_HOME/lib/opentelemetry-sdk-extension-autoconfigure-1.19.0-alpha.jar:$APP_HOME/lib/opentelemetry-sdk-extension-autoconfigure-spi-1.19.0.jar:$APP_HOME/lib/opentelemetry-sdk-1.19.0.jar:$APP_HOME/lib/opentelemetry-sdk-trace-1.19.0.jar:$APP_HOME/lib/opentelemetry-sdk-metrics-1.19.0.jar:$APP_HOME/lib/opentelemetry-sdk-logs-1.19.0-alpha.jar:$APP_HOME/lib/opentelemetry-sdk-common-1.19.0.jar:$APP_HOME/lib/opentelemetry-semconv-1.19.0-alpha.jar:$APP_HOME/lib/opentelemetry-exporter-common-1.19.0.jar:$APP_HOME/lib/opentelemetry-api-logs-1.19.0-alpha.jar:$APP_HOME/lib/opentelemetry-api-1.19.0.jar:$APP_HOME/lib/simpleclient_pushgateway-0.9.0.jar:$APP_HOME/lib/simpleclient_common-0.9.0.jar:$APP_HOME/lib/simpleclient_hotspot-0.9.0.jar:$APP_HOME/lib/simpleclient-0.9.0.jar:$APP_HOME/lib/commons-lang3-3.12.0.jar:$APP_HOME/lib/bcutil-jdk15on-1.70.jar:$APP_HOME/lib/bcprov-jdk15on-1.70.jar:$APP_HOME/lib/tuples-4.9.4.jar:$APP_HOME/lib/rxjava-2.2.2.jar:$APP_HOME/lib/antlr4-4.10.1.jar:$APP_HOME/lib/antlr4-runtime-4.10.1.jar:$APP_HOME/lib/kotlin-stdlib-jdk7-1.6.10.jar:$APP_HOME/lib/kotlin-stdlib-1.6.10.jar:$APP_HOME/lib/framework-1.3.2.jar:$APP_HOME/lib/framework-internal-1.3.2.jar:$APP_HOME/lib/jnr-ffi-2.1.9.jar:$APP_HOME/lib/commons-codec-1.14.jar:$APP_HOME/lib/perfmark-api-0.23.0.jar:$APP_HOME/lib/gson-2.8.9.jar:$APP_HOME/lib/annotations-4.1.1.4.jar:$APP_HOME/lib/animal-sniffer-annotations-1.19.jar:$APP_HOME/lib/netty-tcnative-classes-2.0.54.Final.jar:$APP_HOME/lib/netty-codec-haproxy-4.1.86.Final.jar:$APP_HOME/lib/netty-codec-memcache-4.1.86.Final.jar:$APP_HOME/lib/netty-codec-mqtt-4.1.86.Final.jar:$APP_HOME/lib/netty-codec-redis-4.1.86.Final.jar:$APP_HOME/lib/netty-codec-smtp-4.1.86.Final.jar:$APP_HOME/lib/netty-codec-stomp-4.1.86.Final.jar:$APP_HOME/lib/netty-codec-xml-4.1.86.Final.jar:$APP_HOME/lib/netty-handler-ssl-ocsp-4.1.86.Final.jar:$APP_HOME/lib/netty-transport-rxtx-4.1.86.Final.jar:$APP_HOME/lib/netty-transport-sctp-4.1.86.Final.jar:$APP_HOME/lib/netty-transport-udt-4.1.86.Final.jar:$APP_HOME/lib/opentelemetry-context-1.19.0.jar:$APP_HOME/lib/jaxb-api-2.3.0.jar:$APP_HOME/lib/reactor-core-3.4.26.jar:$APP_HOME/lib/reactive-streams-1.0.4.jar:$APP_HOME/lib/ST4-4.3.3.jar:$APP_HOME/lib/antlr-runtime-3.5.3.jar:$APP_HOME/lib/org.abego.treelayout.core-1.0.3.jar:$APP_HOME/lib/javax.json-1.0.4.jar:$APP_HOME/lib/icu4j-69.1.jar:$APP_HOME/lib/jna-platform-5.6.0.jar:$APP_HOME/lib/woodstox-core-6.5.0.jar:$APP_HOME/lib/annotations-13.0.jar:$APP_HOME/lib/kotlin-stdlib-common-1.6.10.jar:$APP_HOME/lib/jffi-1.2.17.jar:$APP_HOME/lib/jffi-1.2.17-native.jar:$APP_HOME/lib/asm-commons-5.0.3.jar:$APP_HOME/lib/asm-analysis-5.0.3.jar:$APP_HOME/lib/asm-util-5.0.3.jar:$APP_HOME/lib/asm-tree-5.0.3.jar:$APP_HOME/lib/oauth2-oidc-sdk-9.35.jar:$APP_HOME/lib/json-smart-2.4.8.jar:$APP_HOME/lib/accessors-smart-2.4.8.jar:$APP_HOME/lib/asm-9.1.jar:$APP_HOME/lib/jnr-a64asm-1.0.0.jar:$APP_HOME/lib/jnr-x86asm-1.0.2.jar:$APP_HOME/lib/grpc-context-1.45.1.jar:$APP_HOME/lib/jna-5.6.0.jar:$APP_HOME/lib/stax2-api-4.2.1.jar:$APP_HOME/lib/nimbus-jose-jwt-9.22.jar:$APP_HOME/lib/jcip-annotations-1.0-1.jar:$APP_HOME/lib/content-type-2.2.jar:$APP_HOME/lib/lang-tag-1.6.jar


# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=$JAVA_HOME/jre/sh/java
    else
        JAVACMD=$JAVA_HOME/bin/java
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=java
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Increase the maximum file descriptors if we can.
if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
    case $MAX_FD in #(
      max*)
        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC3045 
        MAX_FD=$( ulimit -H -n ) ||
            warn "Could not query maximum file descriptor limit"
    esac
    case $MAX_FD in  #(
      '' | soft) :;; #(
      *)
        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC3045 
        ulimit -n "$MAX_FD" ||
            warn "Could not set maximum file descriptor limit to $MAX_FD"
    esac
fi

# Collect all arguments for the java command, stacking in reverse order:
#   * args from the command line
#   * the main class name
#   * -classpath
#   * -D...appname settings
#   * --module-path (only if needed)
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and ETHSIGNER_OPTS environment variables.

# For Cygwin or MSYS, switch paths to Windows format before running java
if "$cygwin" || "$msys" ; then
    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )

    JAVACMD=$( cygpath --unix "$JAVACMD" )

    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    for arg do
        if
            case $arg in                                #(
              -*)   false ;;                            # don't mess with options #(
              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
                    [ -e "$t" ] ;;                      #(
              *)    false ;;
            esac
        then
            arg=$( cygpath --path --ignore --mixed "$arg" )
        fi
        # Roll the args list around exactly as many times as the number of
        # args, so each arg winds up back in the position where it started, but
        # possibly modified.
        #
        # NB: a `for` loop captures its iteration list before it begins, so
        # changing the positional parameters here affects neither the number of
        # iterations, nor the values presented in `arg`.
        shift                   # remove old arg
        set -- "$@" "$arg"      # push replacement arg
    done
fi

# Collect all arguments for the java command;
#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $ETHSIGNER_OPTS can contain fragments of
#     shell script including quotes and variable substitutions, so put them in
#     double quotes to make sure that they get re-expanded; and
#   * put everything else in single quotes, so that it's not re-expanded.

set -- \
        -classpath "$CLASSPATH" \
        tech.pegasys.ethsigner.EthSignerApp \
        "$@"

# Stop when "xargs" is not available.
if ! command -v xargs >/dev/null 2>&1
then
    die "xargs is not available"
fi

# Use "xargs" to parse quoted args.
#
# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
#
# In Bash we could simply go:
#
#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
#   set -- "${ARGS[@]}" "$@"
#
# but POSIX shell has neither arrays nor command substitution, so instead we
# post-process each arg (as a line of input to sed) to backslash-escape any
# character that might be a shell metacharacter, then use eval to reverse
# that process (while maintaining the separation between arguments), and wrap
# the whole thing up as a single "set" statement.
#
# This will of course break if any of these variables contains a newline or
# an unmatched quote.
#

eval "set -- $(
        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $ETHSIGNER_OPTS" |
        xargs -n1 |
        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
        tr '\n' ' '
    )" '"$@"'

exec "$JAVACMD" "$@"
